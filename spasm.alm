macro ?!
	local isdefined
	isdefined := 0

	purge ?
	calminstruction ?! line&
		proxy op
		local part, lhs, op, rhs
	loop:
		match part? \ line?, line
		jyes notdone
		arrange part, line
		arrange line,
	notdone:
		match .part, part
		jump operators
	operator:
		arrange part, lhs op rhs
	operators:
		arrange op, =shl?
		match lhs =<=< rhs, part
		jyes operator
		arrange op, =shr?
		match lhs =>=> rhs, part
		jyes operator
		arrange op, =and?
		match lhs =& rhs, part
		jyes operator
		arrange op, =or?
		match lhs =| rhs, part
		jyes operator
		arrange op, =xor?
		match lhs =^ rhs, part
		jyes operator
		assemble part
		match , line
		jno loop
	end calminstruction

	calminstruction #define? variable*&
		proxy isdefined
		local value, name
		match variable value?, variable
		arrange name, @isdefined.variable
		publish name, isdefined
		execute =define? variable value
	end calminstruction

	calminstruction #undef? variable*
		proxy isdefined
		execute =restore? variable
		execute =restore? @isdefined.variable
	end calminstruction

	calminstruction #ifdef?! variable*
		proxy isdefined
		execute =if? =definite? @isdefined.variable
	end calminstruction

	calminstruction #ifndef?! variable*
		proxy isdefined
		execute =if? ~=definite? @isdefined.variable
	end calminstruction

	calminstruction #endif?!
		execute =end? =if?
	end calminstruction
end macro
